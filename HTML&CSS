< Basic Terms >
block -> 같은 선상에 올 수 없음 ex) div
inline -> in the same line 같은 선상에 옴 ex) span link img 
       -> 높이와 너비를 가질 수 없음
margin -> box의 경계로부터 바깥에 있는 공간
padding -> box의 경계로부터 안에 있는 공간
box-sizing: border-box -> border의 크기를 width와 height의 값으로 사용할 수 있게 한다

< Flexbox >
flexbox -> 자식에게 명시하지 않고 부모에게 명시한다
        -> 바꾸고자하는 직접적인 부모에 명시해야함
        -> 부모 element를 flex container로 바꾸기. (부모를 display: flex)
        -> justify-content: 주축 / align-items: 교차축
        -> body의 height를 바꾸지 않을 경우 align-items 실행되지 않을 것
        -> flex-direction: column일 시 주축과 교차축이 바뀜 (align-items: 주축 / justify-content: 교차축)
        -> flex-wrap: nowrap --> 창을 축소 시킬 시 안에 있는 box사이즈도 같이 줄어듬
        -> flex-wrap: wrap --> 창을 축소 시킬 시 명시된 사이즈를 지키고 안에 있는 box가 다음줄로 넘어감

< Position >
position: fixed -> 창을 아래로 스크롤해도 고정된 위치
position: relative -> element가 처음 위치한 곳을 기준으로 수정 (top,bottom,left,right사용)
position: absolute -> element는 가장 가까운 relative 부모를 기준으로 이동 / relative 부모가 없을 시 body전체를 기준

< Pseudo Selectors >
div:first-child {} -> 리스트에 있는 div들 중 처음에 있는 것
div:last-child {} -> 리스트에 있는 div들 중 마지막에 있는 것
div:nth-child(3) {} -> 리스트에 있는 div들 중 3번 째로 있는 것
div:nth-child(even/odd/2n/2n+1) {} -> 리스트에 있는 div들 중 (짝수/홀수)번 째로 있는 것
p span {} -> p안에 있는 span
p > span {} -> p의 바로 밑 자식 중 span
p + span {} -> p다음으로 오는 span
input:required{} -> input이 required 인 것

< Placeholder/ Selection/ First-letter/ First-line >
input::placeholder {} -> placeholder을 스타일하고 싶을 때
p::selection {} -> 드래그했을 때 스타일
p::first-letter {} -> paragraph에서 첫 단어 스타일
p::first-line {} -> paragraph에서 첫 문장 스타일

< Attribute Selectors >
input[type="password"] {} -> type이 "password"인 input
input[placeholder~="name"] {} -> placeholder에 "name"이라는 단어를 포함한 모든 input

< States >
button:active {} -> 버튼을 클릭하고 있을 때만
button:focus {} -> 버튼을 클릭했을 때 지속 / tab키 누르면 다음 focus로 넘어감
button:hover {} -> 클릭하는 것이 아닌 마우스 커서가 대상 위에 있을 때
form:hover input {} -> form에 마우스 커서가 있을 시 input이 변화
form:hover input:focus {} -> form에 마우스 커서가 있고 input을 클릭했을 때 input이 변화
a:visited {} -> 링크를 방문하고 난 후

< Variables - Root (ex) >
:root {
        --main-color: yellow;
        --default-border: 1px solid var(--main-color);
}
span {
        background-color: var(--main-color);
        border: var(--default-border
} -> document의 뿌리

< Transitions >
(ex)
<a href="#">Go home</a>
!! transition은 hover이 아닌 !! root에 있어야함 !!
a {
        color: wheat;
        background-color: tomato
        transition: background-color 10s ease-in-out, color 5s ease-in-out;
        --> 배경색이 10초에 걸쳐서 변하고 색은 5초에 걸쳐서 변함
        transition: all 5s ease-in-out;
        --> 변화하는 모든 것에 변화를 줌
}
a:hover {  --> 링크 위에 있으면 변화되는 것
        color: tomato;
        background-color: wheat;
}

< Transformations > --> Transition과 같이 사용
--> 그 외 transform은 transform mdn 참고
(ex)
img {
        transition: transform 5s ease-in-out;
}

img:hover {
        transform: rotateZ(85deg); --> 각도가 바로 변하기만함
}

< Animations >
(ex)
@keyframes 애니메이션이름 {
        ----첫 번째 방법----> 애니메이션 실행하고 다시 처음으로 돌아가기 때문에 끊김
        from {
                transform:rotateX(0);
        }
        to { --> transform 혼합가능
                transform: rotateX(360deg) translateY(100px);
        }
        ----두 번째 방법----> 자연스럽게 넘어감
        0% {
                transform: rotateY(0);
        }
        50% {
                transform: rotateX(360deg) translateY(100px);
        }
        100% {
                transform: rotateY(0);

        }
}

img {
        animation: 애니메이션이름 5s ease-in-out;
        --> 마우스 움직임 없이 5초동안 애니메이션 실행
        animation: 애니메이션이름 5s ease-in-out infinite;
        --> 마우스 움직임 없이 5초동안 애니메이션 실행을 영원히 함
}

< Media Query >
--> 오직 CSS만을 이용해서 스크린의 사이즈를 알 수 있는 방법
--> 그 외는 css media query mdn 참고

(ex)
--> 스크린 창 넓이가 600px 이하일 경우 배경색 변화
@media screen and (max-width: 600px) {
--> 스크린 창 넓이가 500px 이상 600px 이하 일때 변화
@media screen and (max-width: 600px) and (min-width: 500px) {

        div {
                background-color: tomato;
        }
}



